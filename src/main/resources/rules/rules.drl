package com.sample

import com.sample.ShakespeareFlowchart.Answer;
import com.sample.ShakespeareFlowchart.Question;

import org.kie.api.runtime.KieRuntime;
import java.util.ArrayList
import javax.swing.JOptionPane;

import javax.swing.JFrame;
        
global javax.swing.JTextArea textArea;

/*	RULE TEMPLATES
	author ambulanss
-----------------------------------------------------------------------------
This one asks another question based on the previous questiontext and answertext and does NOT finish the program 

rule "rulename"
	when
		Question(qstext == "previous_question_text", anstext == "previous_answer_text")
	then
		Object[] options = {"next_answer1", "next_answer2", ...};
		String text = "next_question";
		insert(makeQuestion, options);
end
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
This one provides an answer
rule "rulename"
	when
		Question(qstext == "previous_question_text", anstext == "previous_answer_text")
	then
		makeAnswer("glorious_title");
end
-----------------------------------------------------------------------------
*/
rule "Start"
	when
	
	then
		System.out.println("Let slip the dogs of war!" + kcontext.getKieRuntime());
		
		Object[] options = {"Take a nap", "Laugh", "Cry", "Watch guys run around with swords", "All of the above"};
		
		insert(makeQuestion("What do you want to do?", options));
		
end
	
rule "Take a nap"
	when
		Question(qstext == "What do you want to do?", anstext == "Take a nap")	
	then
		makeAnswer("Henry VIII");
		//End of path here
end
	
rule "Laugh"
	when 
		Question(qstext == "What do you want to do?", anstext == "Laugh")
	then
		Object[] options = {"Disturbing?", "Hilarious?"};
		insert(makeQuestion("Do you find murder, dismemberment, and cannibalism...", options));
end

rule "LaughHilarious"
	when
		Question(qstext == "Do you find murder, dismemberment, and cannibalism...", anstext == "Hilarious?")
	then
		makeAnswer("Titus Andronicus");
		//end of path here
end

rule "LaughDisturbing"
	when
		Question(qstext == "Do you find murder, dismemberment, and cannibalism...", anstext == "Disturbing?")
	then
		Object[] options = {"Yea!", "Nay."};
		insert(makeQuestion("Cross-dressing:\nYea or Nay?", options));
end

rule "LaughDisturbingYea"
	when
		Question(qstext == "Cross-dressing:\nYea or Nay?", anstext == "Yea!")
	then
		Object[] options = {"Twins are awesome.", "No! No twins!"};
		String text = "Twins?";
		insert(makeQuestion(text , options));
end

rule "LaughDisturbingNay"
	when
		Question(qstext == "Cross-dressing:\nYea or Nay?", anstext == "Nay.")
	then
		Object[] options = {"How contrived.", "Sounds like fun!"};
		String text = "How about twins?";
		
		insert(makeQuestion(text, options));
end

function int showDialog(String text, Object[] options)
{
	
	return JOptionPane.showOptionDialog(null,
                                         text,
                                         "",
                                         JOptionPane.YES_NO_OPTION,
                                         JOptionPane.QUESTION_MESSAGE,
                                         null,
                                         options,
                                         options[0]);
}

function Question makeQuestion(String txt, Object[] opt)
{
	int i = showDialog(txt, opt);
	String chosenOne = (String)opt[i];
	
	return new Question(txt, chosenOne);

}

function void makeAnswer(String text) 
{  
                        
   JOptionPane.showMessageDialog(null,text);
   System.out.println(text);
}
